<%= editing_warning_comment %>

name: 'CI/CD: publish & test against test repos'

on:
  workflow_dispatch: {}

jobs:
  ### Create test APT/YUM repos ###

  create_test_apt_repo:
    name: Create test APT repo
    runs-on: ubuntu-20.04
    needs:
      - check_workflow_uptodate
      - check_version_numbers_need_bumping
    steps:
      - uses: actions/checkout@v2
      - name: Recreate repo
        run: ./internal-scripts/ci-cd/publish/recreate-apt-repo.sh
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-apt-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}


  create_test_yum_repo:
    name: Create test YUM repo
    runs-on: ubuntu-20.04
    needs:
      - check_workflow_uptodate
      - check_version_numbers_need_bumping
    steps:
      - uses: actions/checkout@v2
      - name: Recreate repo
        run: ./internal-scripts/ci-cd/publish/recreate-yum-repo.sh
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-yum-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}


  ### Publish common and fullstaq-rbenv packages to test repos

  publish_common_and_rbenv_debs_test:
    name: Publish common and Rbenv DEBs to test repo
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
      - build_docker_image_utility
      - create_test_apt_repo
      - build_common_deb
      - build_rbenv_deb
    # Run even if a dependent job has been skipped
    if: '!failure() && !cancelled()'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Download common DEB
        uses: ./.github/actions/download-artifact
        with:
          name: <%= common_deb_artifact_name %>
          path: .
      - name: Download Rbenv DEB
        uses: ./.github/actions/download-artifact
        with:
          name: <%= rbenv_deb_artifact_name %>
          path: .

      - name: Download utility Docker image
        uses: ./.github/actions/download-artifact
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        with:
          name: docker-image-utility
          path: .
      - name: Load utility Docker image
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        env:
          TARBALL: image.tar.zst

      - name: Determine latest release tag
        # Sets environment variable $LATEST_RELEASE_TAG
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/determine-latest-release-tag.sh
      - name: Determine Bintray repository package version
        # Sets environment variable $REPO_PACKAGE_VERSION
        run: ./internal-scripts/ci-cd/publish/determine-repo-package-version.sh

      - name: Upload to repo
        run: ./internal-scripts/ci-cd/publish/publish-debs.sh *.deb
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-apt-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}
          DRY_RUN: false
          IGNORE_EXISTING: false


  publish_common_and_rbenv_rpms_test:
    name: Publish common and Rbenv RPMs to test repo
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
      - build_docker_image_utility
      - create_test_yum_repo
      - build_common_rpm
      - build_rbenv_rpm
    # Run even if a dependent job has been skipped
    if: '!failure() && !cancelled()'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      - name: Download common RPM
        uses: ./.github/actions/download-artifact
        with:
          name: <%= common_rpm_artifact_name %>
          path: .
      - name: Download Rbenv RPM
        uses: ./.github/actions/download-artifact
        with:
          name: <%= rbenv_rpm_artifact_name %>
          path: .

      - name: Download utility Docker image
        uses: ./.github/actions/download-artifact
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        with:
          name: docker-image-utility
          path: .
      - name: Load utility Docker image
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        env:
          TARBALL: image.tar.zst

      - name: Determine latest release tag
        # Sets environment variable $LATEST_RELEASE_TAG
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/determine-latest-release-tag.sh
      - name: Determine Bintray repository package version
        # Sets environment variable $REPO_PACKAGE_VERSION
        run: ./internal-scripts/ci-cd/publish/determine-repo-package-version.sh

      - name: Upload to repo
        run: ./internal-scripts/ci-cd/publish/publish-rpms.sh *.rpm
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-yum-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}
          DRY_RUN: false
          IGNORE_EXISTING: false


  ### Publish Ruby packages to test repos

  publish_ruby_packages_test:
    name: Publish Ruby packages to test repo
    runs-on: ubuntu-20.04
    needs:
      - determine_necessary_jobs
      - build_docker_image_utility
      - create_test_apt_repo
      - create_test_yum_repo
      - build_common_deb
      - build_rbenv_deb
      - build_common_rpm
      - build_rbenv_rpm
      <%- distributions.each do |distribution| -%>
      <%- ruby_package_versions.each do |ruby_package_version| %>
      - build_ruby_<%= slug(distribution[:name]) %>-<%= slug(ruby_package_version[:id]) %>
      <%- end %>
      <%- end -%>
    # Run even if a dependent job has been skipped
    if: '!failure() && !cancelled()'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login to Google Cloud
        uses: ./.github/actions/gcloud-login
        with:
          private_key: ${{ secrets.GCLOUD_KEY }}

      <%- ruby_package_artifact_names.each do |artifact_name| %>
      <%- unindent(2) do -%>
        - name: Fetch <%= artifact_name %>
          uses: ./.github/actions/download-artifact
          with:
            name: <%= artifact_name %>
            path: ruby-pkgs
      <%- end -%>
      <%- end %>

      - name: Download Docker image necessary for testing
        uses: ./.github/actions/download-artifact
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        with:
          name: docker-image-utility
          path: .
      - name: Load Docker image necessary for testing
        run: ./internal-scripts/ci-cd/load-docker-image.sh
        if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Build Docker image utility;')
        env:
          TARBALL: image.tar.zst

      - name: Determine latest release tag
        # Sets environment variable $LATEST_RELEASE_TAG
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/determine-latest-release-tag.sh
      - name: Determine Bintray repository package version
        # Sets environment variable $REPO_PACKAGE_VERSION
        run: ./internal-scripts/ci-cd/publish/determine-repo-package-version.sh

      - name: Upload DEBs to repo
        run: ./internal-scripts/ci-cd/publish/publish-debs.sh ruby-pkgs/*.deb
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-apt-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}
          DRY_RUN: false
          IGNORE_EXISTING: false
      - name: Upload RPMs to repo
        run: ./internal-scripts/ci-cd/publish/publish-rpms.sh ruby-pkgs/*.rpm
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-yum-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}
          DRY_RUN: false
          IGNORE_EXISTING: false

  commit_published_packages_test:
    name: Commit packages published to test repo
    runs-on: ubuntu-20.04
    needs:
      - publish_common_and_rbenv_debs_test
      - publish_common_and_rbenv_rpms_test
      - publish_ruby_packages_test
    # No 'if' option here: don't run if a dependent job has been
    # skipped, because that means that one of the transitive
    # dependencies failed.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Determine latest release tag
        # Sets environment variable $LATEST_RELEASE_TAG
        run: ./internal-scripts/ci-cd/check-version-numbers-need-changing/determine-latest-release-tag.sh
      - name: Determine Bintray repository package version
        # Sets environment variable $REPO_PACKAGE_VERSION
        run: ./internal-scripts/ci-cd/publish/determine-repo-package-version.sh

      - name: Commit files published to APT repo
        run: ./internal-scripts/ci-cd/publish/commit-published-packages.sh
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-apt-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}

      - name: Commit files published to YUM repo
        run: ./internal-scripts/ci-cd/publish/commit-published-packages.sh
        env:
          BINTRAY_API_USERNAME: ${{ secrets.BINTRAY_API_USERNAME }}
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}
          REPO_NAME: fullstaq-ruby-yum-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}


  ### Test packages against test repos ###

  <%- distributions_with_test_image_info.each do |distribution| %>
  <%- ruby_package_versions.each do |ruby_package_version| -%>
  <%- unindent(2) do %>
    test_packages_against_test_<%= slug(distribution[:name]) %>_<%= slug(ruby_package_version[:id]) %>:
      name: 'Test Ruby packages against test repos [<%= distribution[:name] %>/<%= ruby_package_version[:id] %>]'
      runs-on: ubuntu-20.04
      needs:
        - determine_necessary_jobs
        - commit_published_packages_test
      <%-
      # Don't check for '!failure() && !cancelled()' here:
      # don't run if a dependent job has been skipped, because that means
      # that one of the transitive dependencies (such as 'Build Ruby')
      # failed.
      true %>
      if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against test repo [<%= distribution[:name] %>/<%= ruby_package_version[:id] %>/')
      steps:
        - uses: actions/checkout@v2
        - name: Login to Google Cloud
          uses: ./.github/actions/gcloud-login
          with:
            private_key: ${{ secrets.GCLOUD_KEY }}

        <%- variants.each do |variant| -%>
        <%- unindent(2) do %>
          - name: '[<%= variant[:name] %>] Run tests'
            run: ./internal-scripts/ci-cd/test-packages/run-tests.sh
            env:
              DISTRIBUTION_NAME: "<%= distribution[:name] %>"
              RUBY_PACKAGE_ID: "<%= ruby_package_version[:id] %>"
              PACKAGE_FORMAT: "<%= distribution[:package_format] %>"
              VARIANT_NAME: "<%= variant[:name] %>"
              VARIANT_PACKAGE_SUFFIX: "<%= variant[:package_suffix] %>"
              TEST_IMAGE_NAME: "<%= distribution[:test_image] %>"
              APT_REPO_URL: https://dl.bintray.com/fullstaq/fullstaq-ruby-apt-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}
              YUM_REPO_URL: https://dl.bintray.com/fullstaq/fullstaq-ruby-yum-ci-${{ env.CI_ARTIFACTS_RUN_NUMBER }}

          - name: '[<%= variant[:name] %>] Create mark file'
            if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against test repo [<%= distribution[:name] %>/<%= ruby_package_version[:id] %>/<%= variant[:name] %>];')
            run: mkdir mark-<%= variant[:name] %> && touch mark-<%= variant[:name] %>/done.txt
          - name: '[<%= variant[:name] %>] Mark job as done'
            if: contains(needs.determine_necessary_jobs.outputs.necessary_jobs, ';Test against test repo [<%= distribution[:name] %>/<%= ruby_package_version[:id] %>/<%= variant[:name] %>];')
            uses: ./.github/actions/upload-artifact
            with:
              name: tested-against-test-<%= distribution[:name] %>_<%= ruby_package_version[:id] %>_<%= variant[:name] %>
              path: mark-<%= variant[:name] %>
        <%- end %>
        <%- end -%>
  <%- end %>
  <%- end -%>
  <%- end %>
